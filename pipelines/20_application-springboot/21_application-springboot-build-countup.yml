trigger:
  - none

pool:
  vmImage: "ubuntu-latest"

variables:
  - group: variablegroup

stages:
  - stage: BuildStage
    jobs:
      - job: BuildJob
        displayName: "Gradle Build and Docker Build & Push"
        continueOnError: false
        workspace:
          clean: outputs
        steps:
          - checkout: self

          - bash: |
              source ./env-files/my_env01_vars.env
              source ./gradle.properties

              echo ----- git clone config repo
              chmod 744 ./shell/git-clone.sh
              ./shell/git-clone.sh --url ${GIT_URL} \
              --github_user $(github-user) \
              --github_token $(github-token)

              echo ----- ls -la
              ls -la

              APP=`echo "${applicationName}" | sed 's/\n//g'`
              VERSION=`echo "${version}" | sed 's/\n//g'`
              VERSION_COUNT_FILE="${GIT_CONFIG_REPO}/version/${APP}-${VERSION}"
              if [ -f "${VERSION_COUNT_FILE}" ]; then
                echo "${VERSION_COUNT_FILE} exist"
                PRE_VERSION=$(cat "${VERSION_COUNT_FILE}")
                ADD_VERSION=$((${PRE_VERSION} + 1))
                echo "ADD_VERSION : ${ADD_VERSION}"
                echo ${ADD_VERSION} > "${VERSION_COUNT_FILE}"
              else
                echo "${VERSION_COUNT_FILE} not exist"
                echo 1 > "${VERSION_COUNT_FILE}"
                echo "created VERSION_COUNT_FILE for version 1"
                ADD_VERSION=0
                echo "ADD_VERSION : ${ADD_VERSION}"
              fi
              echo "##vso[task.setvariable variable=version;]${VERSION}-${ADD_VERSION}"

              ./shell/git-push.sh \
              --url $GIT_URL \
              --github_user $(github-user) \
              --github_token $(github-token) \
              --github_repo $GIT_CONFIG_REPO \
              --github_email $GIT_EMAIL \
              --github_name $GIT_NAME
            displayName: "Count Up Build Num"

          - bash: |
              echo ----- git clone build target version
              echo $(version)
              echo ----- path of JAVA_HOME_11_X64
              echo $JAVA_HOME_11_X64
            displayName: "Get pre info"

          - task: Gradle@2
            displayName: Gradle Build and Test
            inputs:
              gradleWrapperFile: "./application-springboot/gradlew"
              workingDirectory: "./application-springboot"
              tasks: "build test"
              publishJUnitResults: true
              testResultsFiles: "**/TEST-*.xml"
              javaHomeOption: "path"
              jdkDirectory: "$(JAVA_HOME_11_X64)"
              sonarQubeRunAnalysis: false
              spotBugsAnalysis: false
            env:
              SYSTEM_ACCESSTOKEN: "$(System.AccessToken)"

          - task: Docker@2
            displayName: Login to Docker Hub
            inputs:
              command: login
              containerRegistry: "DockerRegistryServiceConnection"
          - task: Docker@2
            displayName: Docker Build and Push
            inputs:
              Dockerfile: "./application-springboot/Dockerfile"
              command: buildAndPush
              repository: "oad3jp999/application-springboot"
              tags: "$(version)"
          - task: Docker@2
            displayName: Logout of Docker Hub
            inputs:
              command: logout
              containerRegistry: "DockerRegistryServiceConnection"
