trigger:
  - none

pool:
  vmImage: "ubuntu-latest"

# pool:
#   name: Self-Hosted-Linux

variables:
  - group: variablegroup

stages:
  - stage: BuildStage
    jobs:
      - job: BuildJob
        displayName: "Gradle Build and Docker Build & Push"
        continueOnError: false
        workspace:
          clean: outputs
        steps:
          - checkout: self
            clean: true

          - bash: |
              source ./env-files/my_env01_vars.env
              source ./gradle.properties

              echo ----- git clone config repo
              chmod 744 ./shell/git-clone.sh
              ./shell/git-clone.sh --url ${GIT_URL} \
              --github_user $(github-user) \
              --github_token $(github-token)

              # echo ----- git clone config repo
              # git clone https://$(github-token)@github.com/oad3/application-springboot-config.git
              # cd application-springboot-config

              echo ----- ls -la
              ls -la

              APP=`echo "${applicationName}" | sed 's/\n//g'`
              VERSION=`echo "${version}" | sed 's/\n//g'`
              VERSION_COUNT_FILE="version/${APP}-${VERSION}"
              if [ -f "${VERSION_COUNT_FILE}" ]; then
                echo "${VERSION_COUNT_FILE} exist"
                PRE_VERSION=$(cat "${VERSION_COUNT_FILE}")
                ADD_VERSION=$((${PRE_VERSION} + 1))
                echo "ADD_VERSION : ${ADD_VERSION}"
                echo ${ADD_VERSION} > "${VERSION_COUNT_FILE}"
              else
                echo "${VERSION_COUNT_FILE} not exist"
                echo 1 > "${VERSION_COUNT_FILE}"
                echo "created VERSION_COUNT_FILE for version 1"
                ADD_VERSION=0
                echo "ADD_VERSION : ${ADD_VERSION}"
              fi
              echo "##vso[task.setvariable variable=count_version;]${VERSION}-${ADD_VERSION}"

              echo ----- git push VERSION_COUNT_FILE
              git config --global user.email "$(email)"
              git config --global user.name "$(name)"
              git add :
              git commit -a -m "Count Up Build Num"
              git push https://$(github-token)@github.com/oad3/application-springboot-config.git --all

              # chmod 744 ./shell/git-push.sh
              # ./shell/git-push.sh \
              # --url $GIT_URL \
              # --github_user $(github-user) \
              # --github_token $(github-token) \
              # --github_repo $GIT_CONFIG_REPO \
              # --github_email $GIT_EMAIL \
              # --github_name $GIT_NAME
            displayName: "Count Up Build Num"

          - bash: |
              echo ----- git clone build target count_version
              echo $(count_version)
              echo ----- current java version
              java --version
              echo ----- path of JAVA_HOME_11_X64
              echo $JAVA_HOME_11_X64
            displayName: "Get pre info"

          # - task: Gradle@2
          #   displayName: Gradle Build and Test
          #   inputs:
          #     gradleWrapperFile: "./gradlew"
          #     workingDirectory: "./"
          #     tasks: "build test"
          #     publishJUnitResults: true
          #     testResultsFiles: "**/TEST-*.xml"
          #     javaHomeOption: "path"
          #     jdkDirectory: "/usr/lib/jvm/java-11-openjdk-amd64"
          #     sonarQubeRunAnalysis: false
          #     spotBugsAnalysis: false
          #   env:
          #     SYSTEM_ACCESSTOKEN: "$(System.AccessToken)"

          # - bash: |
          #     chmod 744 ./gradlew
          #     ./gradlew clean build -PpublishVersion=$(count_version)
          #     ls -la
          #     ls -la ./build
          #     ls -la ./build/libs
          #     ./gradlew publish -PvstsMavenAccessToken=$(System.AccessToken) -PpublishVersion=$(count_version)
          #   displayName: "Gradle Build & Publish"

          # - task: Docker@2
          #   displayName: Login to Docker Hub
          #   inputs:
          #     command: login
          #     containerRegistry: "DockerRegistryServiceConnection"
          # - task: Docker@2
          #   displayName: Docker Build and Push
          #   inputs:
          #     Dockerfile: "./Dockerfile"
          #     command: buildAndPush
          #     repository: "oad3jp999/application-springboot"
          #     tags: "$(count_version)"
          # - task: Docker@2
          #   displayName: Logout of Docker Hub
          #   inputs:
          #     command: logout
          #     containerRegistry: "DockerRegistryServiceConnection"
